#version 300 es
#ifdef GLSL

// <Sampler Name='u_samplerState' Texture='u_texture' />
// <Sampler Name='u_samplerState2' Texture='u_texture2' />

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_textureSize;
uniform sampler2D u_texture;
uniform sampler2D u_texture2;

in vec2 v_texcoord;

out vec4 fragColor;

//Forked from https://www.shadertoy.com/view/lsBfRc
#define colorRange 24.0

vec3 jodieReinhardTonemap(vec3 c) {
    float l = dot(c, vec3(0.2126, 0.7152, 0.0722));
    vec3 tc = c / (c + 1.0);
    return mix(c / (l + 1.0), tc, tc);
}

vec3 bloomTile(float lod, vec2 offset, vec2 uv) {
    return texture(u_texture2, uv * exp2(-lod) + offset).xyz;
}

vec3 getBloom(vec2 uv) {

    vec3 blur = pow(bloomTile(2.0, vec2(0.0, 0.0), uv), vec3(2.2)) * 2.0;
    blur += pow(bloomTile(3.0, vec2(0.3, 0.0), uv), vec3(2.2)) * 8.0;
    blur += pow(bloomTile(4.0, vec2(0.0, 0.3), uv), vec3(2.2)) * 30.0;
    blur += pow(bloomTile(5.0, vec2(0.1, 0.3), uv), vec3(2.2)) * 40.0;
    blur += pow(bloomTile(6.0, vec2(0.2, 0.3), uv), vec3(2.2)) * 220.0;

    return blur * colorRange * 2.0;
}

void main()
{
    vec3 color = pow(texture(u_texture, v_texcoord).rgb / 5.0 * colorRange, vec3(4.4));
    color += pow(getBloom(v_texcoord), vec3(2.2));
    color = jodieReinhardTonemap(pow(color, vec3(1.0 / 2.2)));
    fragColor = vec4(color, 1.0);
}

#endif
